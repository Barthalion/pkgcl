#!/usr/bin/env ruby

# Author: Alex Brown
# email: code@alexpbrown.me
# license: WTFPL

require 'nokogiri'
require 'open-uri'
require 'optparse'

def colorize(text, color_code)
  "\e[#{color_code}m#{text}\e[0m"
end

VERSION = "0.2.0"
@options = {}
@options[:commits] = 1
@options[:show_git_svn] = false
@options[:testing_repo] = false

opts = OptionParser.new do |opts|
  opts.banner = "Usage: pkgcl [options] <packages>"
  opts.separator ""
  opts.on("-c", "--commits=NUM", Integer, "Show NUM commit messages") do |n|
    @options[:commits] = n
  end
  opts.on("--show-git-svn-id", "Show git-svn-id messages") do
    @options[:show_git_svn] = true
  end
  opts.on("--enable-testing", "Show commits relevant to packages in [testing]") do
    @options[:testing_repo] = true
  end
  opts.on("-v", "--version", "Show version information") do
    puts VERSION
    exit
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end
opts.parse!(ARGV)

# check for stdin and get package list accordingly
# I even decided to be nice and parse both 'pacman -Qu' and 'pacman -Qqu' on stdin
packages = []
if STDIN.tty? == false
  ARGF.lines do |line|
    packages << line.strip!.split(" ")[0]
  end
else
  packages = ARGV
end

puts opts if packages.empty?

def get_pkg(pkg)
  repo, arch = "", ""
  IO.popen([{"LC_ALL"=>"C"}, "pacman", "-Si", pkg, :err => :close]) do |io|
    io.lines do |line|
      case line
      when /^Repository(\s?)*: (.+)$/
        repo = $2
      when /^Architecture(\s?)*: (.+)$/
        arch = $2
      end
    end
  end

  if repo.empty? && arch.empty?
    puts "["+colorize(pkg, 31)+"]"
    puts "Not Found"
    puts
    return
  end

  # I need to get the correct git url from here, since some packages use a
  # different tracking repo (e.g. linux-headers => linux)
  # I'm also getting the last updated date from this url
  doc = Nokogiri::HTML(open("http://www.archlinux.org/packages/#{repo}/#{arch}/#{pkg}"))

  u_date = doc.at_xpath('.//th[text()="Last Updated:"]').parent.children[2].content
  @pkg_time = Time.parse(u_date)

  return doc.css("div#actionlist ul li a")[1]['href']
end

def show_commit(n)
  age = @doc.css('table.list.nowrap tr.logheader')[n].css('td')[0].content

  if @options[:testing_repo] == false then
    case age
    when /days/
      git_time = Time.now - age.to_i*60*60*24
    when /hours/
      git_time = Time.now - age.to_i*60*60
    when /min/
      git_time = Time.now - age.to_i*60
    else
      git_time = Time.parse(age)
    end

    if git_time > @pkg_time then
      return
    end
  end

  header = @doc.css('table.list.nowrap td.logsubject')[n].content
  content = @doc.css('table.list.nowrap td.logmsg')[n].content

  # Format and print the result
  content.gsub!(/^git-svn-id.*$/, "") unless @options[:show_git_svn] == true
  content.strip!
  age.strip!
  puts colorize(header, 4)
  print colorize("Age: ", 37)
  print colorize(age, 36)+" - "
  puts content.empty? ? colorize("None", 32) : colorize(content, 32)
  puts
  @output +=1
end

packages.each do |p|
  git_link = get_pkg(p)
  puts "["+colorize(p, 31)+"]"

  # get the page with the messages expanded
  @doc = Nokogiri::HTML(open("#{git_link}&showmsg=1"))

  @output = 0
  n = 0
  while @output < @options[:commits]
    show_commit(n)
    n +=1
  end

end
